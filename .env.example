# AI Model Response Evaluator - Environment Configuration
# Copy this file to .env and fill in your actual values

# =============================================================================
# REQUIRED API KEYS
# =============================================================================

# Google Gemini API Key
# Get your key from: https://aistudio.google.com/app/apikey
GOOGLE_API_KEY=your_gemini_api_key_here

# Tavily Search API Key  
# Sign up at: https://tavily.com/ for AI-optimized search
TAVILY_API_KEY=your_tavily_api_key_here

# =============================================================================
# OLLAMA CONFIGURATION
# =============================================================================

# Ollama API Base URL (default: http://localhost:11434/v1)
# Change this if Ollama is running on a different host/port
OLLAMA_BASE_URL=http://localhost:11434/v1

# How long to keep models loaded in memory (default: 5m)
# Set to -1 to keep models loaded permanently
# Set to 0 to unload immediately after each query
OLLAMA_KEEP_ALIVE=5m

# Maximum number of models to keep loaded simultaneously (default: 3)
OLLAMA_MAX_LOADED_MODELS=3

# Maximum parallel requests per model (default: auto)
OLLAMA_NUM_PARALLEL=2

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Flask environment (development/production)
FLASK_ENV=development

# Enable Flask debugging (True/False)
FLASK_DEBUG=True

# Application host (default: 0.0.0.0)
FLASK_HOST=0.0.0.0

# Application port (default: 5001)
FLASK_PORT=5001

# Secret key for session management (generate a random string)
FLASK_SECRET_KEY=your-secret-key-here

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# SQLite database file path
DATABASE_PATH=./new_query_history.db

# Enable database query logging (True/False)
DATABASE_ECHO=False

# Database connection pool size
DATABASE_POOL_SIZE=10

# =============================================================================
# LOGGING CONFIGURATION  
# =============================================================================

# Logging level (DEBUG/INFO/WARNING/ERROR/CRITICAL)
LOG_LEVEL=INFO

# Log file path (leave empty to log to console only)
LOG_FILE=

# Maximum log file size in bytes (default: 10MB)
LOG_MAX_SIZE=10485760

# Number of backup log files to keep
LOG_BACKUP_COUNT=5

# =============================================================================
# API TIMEOUTS & RETRIES
# =============================================================================

# HTTP request timeout in seconds
REQUEST_TIMEOUT=120

# Number of retry attempts for failed API calls
API_MAX_RETRIES=3

# Delay between retry attempts in seconds
API_RETRY_DELAY=5

# Exponential backoff multiplier for retries
API_BACKOFF_MULTIPLIER=2

# =============================================================================
# PERFORMANCE TUNING
# =============================================================================

# Enable response caching (True/False)
ENABLE_CACHING=True

# Cache timeout in seconds
CACHE_TIMEOUT=3600

# Maximum response length to cache
CACHE_MAX_LENGTH=50000

# Enable GPU memory monitoring (True/False)  
ENABLE_GPU_MONITORING=True

# GPU memory cleanup threshold (percentage)
GPU_CLEANUP_THRESHOLD=85

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Enable CORS for cross-origin requests (True/False)
ENABLE_CORS=False

# Allowed origins for CORS (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# Enable API rate limiting (True/False)
ENABLE_RATE_LIMITING=False

# Rate limit: requests per minute per IP
RATE_LIMIT_PER_MINUTE=60

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable experimental features (True/False)
ENABLE_EXPERIMENTAL_FEATURES=False

# Enable batch processing (True/False)
ENABLE_BATCH_PROCESSING=True

# Enable response export functionality (True/False)  
ENABLE_EXPORT=True

# Enable detailed timing metrics (True/False)
ENABLE_METRICS=True

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Enable debug toolbar in development (True/False)
ENABLE_DEBUG_TOOLBAR=False

# Enable profiling for performance analysis (True/False)  
ENABLE_PROFILING=False

# Mock API responses for testing (True/False)
MOCK_API_RESPONSES=False

# =============================================================================
# EXAMPLE VALUES (REMOVE IN PRODUCTION)
# =============================================================================

# Example Gemini API key format:
# GOOGLE_API_KEY=AIzaSyC-abc123def456ghi789jkl012mno345pqr678

# Example Tavily API key format:
# TAVILY_API_KEY=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

# Example secret key generation (Linux/Mac):
# python3 -c "import secrets; print(secrets.token_hex(32))"
# FLASK_SECRET_KEY=a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6

# =============================================================================
# NOTES
# =============================================================================

# 1. Never commit the actual .env file to version control
# 2. Keep your API keys secure and do not share them
# 3. Use strong, unique secret keys for production deployments
# 4. Adjust timeout and retry settings based on your network conditions
# 5. Monitor resource usage and adjust performance settings accordingly
# 6. For production, disable debugging and enable appropriate security measures